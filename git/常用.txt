---取拉更新---\
git.exe pull -v --progress  "origin" develop
git pull -v --progress  "origin" develop
---取拉更新---/

---查看目前代码的修改状态---\
git status
---查看目前代码的修改状态---/

---查看代码修改的内容---\
git diff  <file>
---查看代码修改的内容---/

---暂存需要提交的文件---\
如果是新建的文件
则git add  <file>

如果是修改的文件
则git add  <file>

如果是删除的文件
则 git rm  <file>
---暂存需要提交的文件---/

---提交已暂存的文件---\
git commit
注意注释填写规范。

git commit --amend
修改最近一次提交。有时候如果提交注释书写有误或者漏提文件，可以使用此命令。
---提交已暂存的文件---/

---同步到服务器---\
同步到服务器前先需要将服务器代码同步到本地

命令： git pull

如果执行失败，就按照提示还原有冲突的文件，然后再次尝试同步。

命令：git checkout -- <有冲突的文件路径>


同步到服务器

命令： git push origin  <本地分支名>

如果执行失败，一般是没有将服务器代码同步到本地导致的，先执行上面的git pull命令。
---同步到服务器---/

---获取项目---\
git clone --progress -v "http://worksource.com/GT/GTCardWXPlatform.git"
git.exe clone --progress -v "http://worksource.com/GT/GTCardWXPlatform.git" "D:\other\git\GTCardWXPlatform"
---获取项目---/

---查看本地分支---\
git branch
---查看本地分支---/

---查看本地与远程分支---\
git branch -a
---查看本地与远程分支---/

---创建本地分支---\
创建一个名为test的分支
git branch test
---创建本地分支---/

---切换分支---\
切换本地分支到
git checkout develop_v1.3
---切换分支---/

//---拉取某个分支---\
git pull origin "develop_v1.3"
//---拉取某个分支---/

//---拉取指定分支，创建本地分支，并切换新创建的分支---\
git checkout -b develop_v1.3 origin/develop_v1.3
//---拉取指定分支，创建本地分支，并切换新创建的分支---/

//---创建新分支并基于指定分支---\
git checkout -b develop_v1.4 origin/develop_v1.3        //创建
git push origin develop_v1.4                            //推送至仓库
//---创建新分支并基于指定分支---/

//---删除本地分支---\
git branch -d xxxxx
//---删除本地分支---/



git add README.ME
git commit -m "message"
git push origin master

git add xx命令可以将xx文件添加到暂存区，如果有很多改动可以通过 git add -A .来一次添加所有改变的文件。

注意 -A 选项后面还有一个句点。 git add -A表示添加所有内容， git add . 表示添加新文件和编辑过的文件不包括删除的文件; git add -u 表示添加编辑或者删除的文件，不包括新添加的文件。













