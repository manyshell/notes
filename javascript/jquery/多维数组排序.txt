<script>
var bySort = function(name,minor){
                return function(o,p){
                    var a,b;
                    if(o && p && typeof o === 'object' && typeof p ==='object'){
                        a = o[name];
                        b = p[name];
                        if(a === b){
                            return typeof minor === 'function' ? minor(o,p):0;
                        }
                        if(typeof a === typeof b){
                            return a < b ? -1:1;
                        }
                        return typeof a < typeof b ? -1 : 1;
                    }else{
                        throw("error");
                    }
                }
            };
</script>

例1：
二维数组，一维排序
排序规则，第一排序列1(键名1)
var arr2_2 = [[3, 2], [2, 8], [1, 7]];
arr2_2.sort(bySort(1));

排序前：
0:  3, 2
1:  2, 8
2:  1, 7
排序后：
0:  3, 2
1:  1, 7
2:  2, 8

例2：
二维数组，二维排序
排序规则，第一排序列0(键名a)，第二排序列1(键名b)
var arr2_1 = [];
arr2_1[0] = {"a":1,"b":2};
arr2_1[1] = {"a":2,"b":8};
arr2_1[2] = {"a":2,"b":7};
arr2_1.sort(bySort("a",bySort("b")));

排序前：
0:  1, 2
1:  2, 8
2:  2, 7
排序后：
0:  1, 2
1:  2, 7
2:  2, 8

例3：
二维数组，二维排序
排序规则，第一排序列0(键名0)，第二排序列1(键名1)
var arr2_2 = [[1, 2], [2, 8], [2, 7]];
arr2_2.sort(bySort(0,bySort(1)));

排序前：
0:  1, 2
1:  2, 8
2:  2, 7
排序后：
0:  1, 2
1:  2, 7
2:  2, 8

例3：
三维数组，三维排序
排序规则，第一排序列0(键名0)，第二排序列1(键名1)
var arr3 = [[1, 2, 10], [1, 9, 8], [8, 2, 7], [8, 10, 1], [8, 10, 2]];
arr3.sort(bySort(1,bySort(0,bySort(2))));

排序前：
0:  1,  2,  10
1:  1,  9,  8
2:  8,  2,  7
3:  8,  10, 1
4:  5,  10, 2
排序后：
0:  1,  2,  10
1:  8,  2,  7
2:  1,  9,  8
3:  8,  10, 1
4:  8,  10, 2


