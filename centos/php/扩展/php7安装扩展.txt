初始状态时，docker里的php环境是没有php.ini的，所以需要自己产生
root@e735b54efea4:/usr/local/etc/php/conf.d# whereis php.ini
php: /usr/local/bin/php /usr/local/etc/php /usr/local/lib/php /usr/local/php /usr/src/php/php.gif /usr/src/php/php.ini-development /usr/src/php/php.ini-production /usr/src/php/php7.spec

一、取得php.ini文件
cp /usr/src/php/php.ini-development /var/www/html/php.ini           //将开发环境的php.ini放到项目目录中，是为了方便修改，改完后再放回到系统配置目录中

可在扩展目录看到已有的扩展
ls -la /usr/local/lib/php/extensions/no-debug-non-zts-20151012

二、修改php.ini
1、修改前：
[721]; Directory in which the loadable extensions (modules) reside.
[722]; http://php.net/extension-dir
[723]; extension_dir = "./"
[724]; On windows:
[725]; extension_dir = "ext"

修改后：（修改第723行）
; Directory in which the loadable extensions (modules) reside.
; http://php.net/extension-dir
extension_dir = "/usr/local/lib/php/extensions/no-debug-non-zts-20151012"
; On windows:
; extension_dir = "ext"

2、举一个安装mbstring的例子，修改前
[877];extension=php_mbstring.dll

修改后：（修改第877行）
extension=mbstring.so


三、将修改后的php.ini复制回去
cp /var/www/html/php.ini /usr/local/etc/php/php.ini

四、启动php-fpm
php-fpm         临时启动
php-fpm &       永久执行



